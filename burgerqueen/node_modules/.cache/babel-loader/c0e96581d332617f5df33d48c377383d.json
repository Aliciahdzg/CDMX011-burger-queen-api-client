{"ast":null,"code":"var _jsxFileName = \"/home/alicia/Documentos/Laboratoria/bqmaster/CDMX011-burger-queen-api-client/burgerqueen/src/components/FormUsers.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { Icon } from '@iconify/react';\nimport Select from 'react-select';\nimport './styles/Users.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormUsers = _ref => {\n  _s();\n\n  let {\n    handleRegister\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [rol, setRol] = useState('');\n  const options = [{\n    value: 'waiter',\n    label: 'Mesero'\n  }, {\n    value: 'chef',\n    label: 'Cocina'\n  }, {\n    value: 'admin',\n    label: 'Administrador'\n  }];\n  const customStyles = {\n    option: (provided, state) => ({ ...provided,\n      borderBottom: '1px solid orange',\n      color: state.isSelected ? 'red' : 'blue',\n      width: 173\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = 'opacity 300ms';\n      return { ...provided,\n        opacity,\n        transition\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"users-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Correo Electronico\",\n        onChange: e => {\n          setEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirmar Contrase\\xF1a\",\n        onChange: e => {\n          setConfirmPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: options,\n        styles: customStyles,\n        onChange: e => {\n          setRol(e.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          handleRegister(email, password, confirmPassword, rol);\n        },\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          icon: \"akar-icons:circle-plus-fill\",\n          color: \"#f2884b\",\n          height: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormUsers, \"PQL1qmMYjJP7mRBK0Wdw/0Lg0pI=\");\n\n_c = FormUsers;\nexport default FormUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormUsers\");","map":{"version":3,"sources":["/home/alicia/Documentos/Laboratoria/bqmaster/CDMX011-burger-queen-api-client/burgerqueen/src/components/FormUsers.jsx"],"names":["React","useState","Icon","Select","FormUsers","handleRegister","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","rol","setRol","options","value","label","customStyles","option","provided","state","borderBottom","color","isSelected","width","singleValue","opacity","isDisabled","transition","e","target"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { Icon } from '@iconify/react';\nimport Select from 'react-select';\n\nimport './styles/Users.scss';\n\nconst FormUsers = ({ handleRegister }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [rol, setRol] = useState('');\n  const options = [\n    { value: 'waiter', label: 'Mesero' },\n    { value: 'chef', label: 'Cocina' },\n    { value: 'admin', label: 'Administrador' }\n  ];\n\n  const customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      borderBottom: '1px solid orange',\n      color: state.isSelected ? 'red' : 'blue',\n      width: 173\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = 'opacity 300ms';\n\n      return { ...provided, opacity, transition };\n    }\n  };\n  return (\n    <div className=\"users-form\">\n      <form>\n        <input\n          type=\"email\"\n          placeholder=\"Correo Electronico\"\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Contraseña\"\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Confirmar Contraseña\"\n          onChange={(e) => {\n            setConfirmPassword(e.target.value);\n          }}\n        />\n        <Select\n          options={options}\n          styles={customStyles}\n          onChange={(e) => {\n            setRol(e.value);\n          }}\n        />\n        <button\n          type=\"button\"\n          onClick={() => {\n            handleRegister(email, password, confirmPassword, rol);\n          }}\n        >\n          <Icon\n            icon=\"akar-icons:circle-plus-fill\"\n            color=\"#f2884b\"\n            height=\"30\"\n          />\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormUsers;\n"]},"metadata":{},"sourceType":"module"}
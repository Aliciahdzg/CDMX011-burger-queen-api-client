{"ast":null,"code":"/* eslint-disable prefer-promise-reject-errors */\n\n/* eslint-disable no-param-reassign */\n\n/* eslint-disable import/prefer-default-export */\nexport const helpHttp = () => {\n  const customFetch = (endpoint, options) => {\n    const defaultHeaders = {\n      accept: 'application/json'\n    };\n    const controller = new AbortController();\n    options.signal = controller.signal;\n    options.method = options.method || 'GET';\n    options.header = options.header ? { ...defaultHeaders,\n      ...options.headers\n    } : defaultHeaders;\n    options.body = JSON.stringify(options.body) || false;\n    if (!options.body) delete options.body; // console.log(options);\n\n    setTimeout(() => controller.abort(), 3000);\n    return fetch(endpoint, options).then(res => res.ok ? res.json() : Promise.reject({\n      err: true,\n      status: res.status || '00',\n      statusText: res.statusText || 'Ocurrio un error'\n    })).catch(err => err);\n  };\n\n  const get = function (url) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return customFetch(url, options);\n  };\n\n  const post = function (url) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    options.method = 'POST';\n    return customFetch(url, options);\n  };\n\n  const put = function (url) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    options.method = 'PUT';\n    return customFetch(url, options);\n  };\n\n  const del = function (url) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    options.method = 'DELETE';\n    return customFetch(url, options);\n  };\n\n  const patch = function (url) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    options.method = 'PATCH';\n    return customFetch(url, options);\n  };\n\n  return {\n    get,\n    post,\n    put,\n    del,\n    patch\n  };\n};","map":{"version":3,"sources":["/home/alicia/Documentos/Laboratoria/CDMX011-burger-queen-api-client/burgerqueen/src/helpers/helpHttp.js"],"names":["helpHttp","customFetch","endpoint","options","defaultHeaders","accept","controller","AbortController","signal","method","header","headers","body","JSON","stringify","setTimeout","abort","fetch","then","res","ok","json","Promise","reject","err","status","statusText","catch","get","url","post","put","del","patch"],"mappings":"AAAA;;AACA;;AACA;AACA,OAAO,MAAMA,QAAQ,GAAG,MAAM;AAC5B,QAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB;AACzC,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE;AADa,KAAvB;AAGA,UAAMC,UAAU,GAAG,IAAIC,eAAJ,EAAnB;AACAJ,IAAAA,OAAO,CAACK,MAAR,GAAiBF,UAAU,CAACE,MAA5B;AACAL,IAAAA,OAAO,CAACM,MAAR,GAAiBN,OAAO,CAACM,MAAR,IAAkB,KAAnC;AACAN,IAAAA,OAAO,CAACO,MAAR,GAAiBP,OAAO,CAACO,MAAR,GACb,EAAE,GAAGN,cAAL;AAAqB,SAAGD,OAAO,CAACQ;AAAhC,KADa,GAEbP,cAFJ;AAIAD,IAAAA,OAAO,CAACS,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeX,OAAO,CAACS,IAAvB,KAAgC,KAA/C;AACA,QAAI,CAACT,OAAO,CAACS,IAAb,EAAmB,OAAOT,OAAO,CAACS,IAAf,CAZsB,CAczC;;AAEAG,IAAAA,UAAU,CAAC,MAAMT,UAAU,CAACU,KAAX,EAAP,EAA2B,IAA3B,CAAV;AAEA,WAAOC,KAAK,CAACf,QAAD,EAAWC,OAAX,CAAL,CACJe,IADI,CACEC,GAAD,IACJA,GAAG,CAACC,EAAJ,GACID,GAAG,CAACE,IAAJ,EADJ,GAEIC,OAAO,CAACC,MAAR,CAAe;AACbC,MAAAA,GAAG,EAAE,IADQ;AAEbC,MAAAA,MAAM,EAAEN,GAAG,CAACM,MAAJ,IAAc,IAFT;AAGbC,MAAAA,UAAU,EAAEP,GAAG,CAACO,UAAJ,IAAkB;AAHjB,KAAf,CAJD,EAUJC,KAVI,CAUGH,GAAD,IAASA,GAVX,CAAP;AAWD,GA7BD;;AA8BA,QAAMI,GAAG,GAAG,UAACC,GAAD;AAAA,QAAM1B,OAAN,uEAAgB,EAAhB;AAAA,WAAuBF,WAAW,CAAC4B,GAAD,EAAM1B,OAAN,CAAlC;AAAA,GAAZ;;AACA,QAAM2B,IAAI,GAAG,UAACD,GAAD,EAAuB;AAAA,QAAjB1B,OAAiB,uEAAP,EAAO;AAClCA,IAAAA,OAAO,CAACM,MAAR,GAAiB,MAAjB;AACA,WAAOR,WAAW,CAAC4B,GAAD,EAAM1B,OAAN,CAAlB;AACD,GAHD;;AAIA,QAAM4B,GAAG,GAAG,UAACF,GAAD,EAAuB;AAAA,QAAjB1B,OAAiB,uEAAP,EAAO;AACjCA,IAAAA,OAAO,CAACM,MAAR,GAAiB,KAAjB;AACA,WAAOR,WAAW,CAAC4B,GAAD,EAAM1B,OAAN,CAAlB;AACD,GAHD;;AAIA,QAAM6B,GAAG,GAAG,UAACH,GAAD,EAAuB;AAAA,QAAjB1B,OAAiB,uEAAP,EAAO;AACjCA,IAAAA,OAAO,CAACM,MAAR,GAAiB,QAAjB;AACA,WAAOR,WAAW,CAAC4B,GAAD,EAAM1B,OAAN,CAAlB;AACD,GAHD;;AAIA,QAAM8B,KAAK,GAAG,UAACJ,GAAD,EAAuB;AAAA,QAAjB1B,OAAiB,uEAAP,EAAO;AACnCA,IAAAA,OAAO,CAACM,MAAR,GAAiB,OAAjB;AACA,WAAOR,WAAW,CAAC4B,GAAD,EAAM1B,OAAN,CAAlB;AACD,GAHD;;AAKA,SAAO;AAAEyB,IAAAA,GAAF;AAAOE,IAAAA,IAAP;AAAaC,IAAAA,GAAb;AAAkBC,IAAAA,GAAlB;AAAuBC,IAAAA;AAAvB,GAAP;AACD,CAlDM","sourcesContent":["/* eslint-disable prefer-promise-reject-errors */\n/* eslint-disable no-param-reassign */\n/* eslint-disable import/prefer-default-export */\nexport const helpHttp = () => {\n  const customFetch = (endpoint, options) => {\n    const defaultHeaders = {\n      accept: 'application/json'\n    };\n    const controller = new AbortController();\n    options.signal = controller.signal;\n    options.method = options.method || 'GET';\n    options.header = options.header\n      ? { ...defaultHeaders, ...options.headers }\n      : defaultHeaders;\n\n    options.body = JSON.stringify(options.body) || false;\n    if (!options.body) delete options.body;\n\n    // console.log(options);\n\n    setTimeout(() => controller.abort(), 3000);\n\n    return fetch(endpoint, options)\n      .then((res) =>\n        res.ok\n          ? res.json()\n          : Promise.reject({\n              err: true,\n              status: res.status || '00',\n              statusText: res.statusText || 'Ocurrio un error'\n            })\n      )\n      .catch((err) => err);\n  };\n  const get = (url, options = {}) => customFetch(url, options);\n  const post = (url, options = {}) => {\n    options.method = 'POST';\n    return customFetch(url, options);\n  };\n  const put = (url, options = {}) => {\n    options.method = 'PUT';\n    return customFetch(url, options);\n  };\n  const del = (url, options = {}) => {\n    options.method = 'DELETE';\n    return customFetch(url, options);\n  };\n  const patch = (url, options = {}) => {\n    options.method = 'PATCH';\n    return customFetch(url, options);\n  };\n\n  return { get, post, put, del, patch };\n};\n"]},"metadata":{},"sourceType":"module"}
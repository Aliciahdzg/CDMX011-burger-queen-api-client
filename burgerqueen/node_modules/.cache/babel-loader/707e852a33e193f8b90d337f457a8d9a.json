{"ast":null,"code":"var _jsxFileName = \"/home/alicia/Documentos/Laboratoria/bqmaster/CDMX011-burger-queen-api-client/burgerqueen/src/components/Users.jsx\";\nimport React from 'react';\nimport Swal from 'sweetalert2';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { doc, setDoc } from 'firebase/firestore';\nimport FormUsers from './FormUsers';\nimport InfoUsers from './InfoUsers';\nimport auth, { db } from '../firebase/firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = () => {\n  const handleRegister = async (email, password, confirmPassword, rol) => {\n    if (password !== confirmPassword) {\n      Swal.fire({\n        title: 'Error!',\n        text: 'Contraseñas no coinciden',\n        icon: 'warning',\n        confirmButtonText: 'Aceptar'\n      });\n    } else {\n      try {\n        const infoUsuario = await createUserWithEmailAndPassword(auth, email, password).then(usuarioFirebase => usuarioFirebase);\n        const docuRef = doc(db, `users/${infoUsuario.user.uid}`);\n        setDoc(docuRef, {\n          email,\n          role: rol\n        });\n        Swal.fire({\n          title: 'Registro Exitoso!',\n          text: 'Se ha registrado nuevo usuario',\n          icon: 'success',\n          confirmButtonText: 'Aceptar'\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      if (!rol.includes('mesero', 'cocinero', 'administrador')) {\n        Swal.fire({\n          title: 'Error!',\n          text: 'Falta elegir el rol',\n          icon: 'warning',\n          confirmButtonText: 'Aceptar'\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"users-container\",\n    children: [/*#__PURE__*/_jsxDEV(FormUsers, {\n      handleRegister: handleRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"usersData\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"NOMBRE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"ROL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"EMAIL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoUsers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/home/alicia/Documentos/Laboratoria/bqmaster/CDMX011-burger-queen-api-client/burgerqueen/src/components/Users.jsx"],"names":["React","Swal","createUserWithEmailAndPassword","doc","setDoc","FormUsers","InfoUsers","auth","db","Users","handleRegister","email","password","confirmPassword","rol","fire","title","text","icon","confirmButtonText","infoUsuario","then","usuarioFirebase","docuRef","user","uid","role","error","console","log","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,8BAAT,QAA+C,eAA/C;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,oBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,IAAP,IAAeC,EAAf,QAAyB,4BAAzB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,cAAc,GAAG,OAAOC,KAAP,EAAcC,QAAd,EAAwBC,eAAxB,EAAyCC,GAAzC,KAAiD;AACtE,QAAIF,QAAQ,KAAKC,eAAjB,EAAkC;AAChCZ,MAAAA,IAAI,CAACc,IAAL,CAAU;AACRC,QAAAA,KAAK,EAAE,QADC;AAERC,QAAAA,IAAI,EAAE,0BAFE;AAGRC,QAAAA,IAAI,EAAE,SAHE;AAIRC,QAAAA,iBAAiB,EAAE;AAJX,OAAV;AAMD,KAPD,MAOO;AACL,UAAI;AACF,cAAMC,WAAW,GAAG,MAAMlB,8BAA8B,CACtDK,IADsD,EAEtDI,KAFsD,EAGtDC,QAHsD,CAA9B,CAIxBS,IAJwB,CAIlBC,eAAD,IAAqBA,eAJF,CAA1B;AAKA,cAAMC,OAAO,GAAGpB,GAAG,CAACK,EAAD,EAAM,SAAQY,WAAW,CAACI,IAAZ,CAAiBC,GAAI,EAAnC,CAAnB;AACArB,QAAAA,MAAM,CAACmB,OAAD,EAAU;AAAEZ,UAAAA,KAAF;AAASe,UAAAA,IAAI,EAAEZ;AAAf,SAAV,CAAN;AACAb,QAAAA,IAAI,CAACc,IAAL,CAAU;AACRC,UAAAA,KAAK,EAAE,mBADC;AAERC,UAAAA,IAAI,EAAE,gCAFE;AAGRC,UAAAA,IAAI,EAAE,SAHE;AAIRC,UAAAA,iBAAiB,EAAE;AAJX,SAAV;AAMD,OAdD,CAcE,OAAOQ,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AACD,UAAI,CAACb,GAAG,CAACgB,QAAJ,CAAa,QAAb,EAAuB,UAAvB,EAAmC,eAAnC,CAAL,EAA0D;AACxD7B,QAAAA,IAAI,CAACc,IAAL,CAAU;AACRC,UAAAA,KAAK,EAAE,QADC;AAERC,UAAAA,IAAI,EAAE,qBAFE;AAGRC,UAAAA,IAAI,EAAE,SAHE;AAIRC,UAAAA,iBAAiB,EAAE;AAJX,SAAV;AAMD;AACF;AACF,GAnCD;;AAoCA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,cAAc,EAAET;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAC,WAAjB;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAlDD;;KAAMD,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React from 'react';\n\nimport Swal from 'sweetalert2';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { doc, setDoc } from 'firebase/firestore';\nimport FormUsers from './FormUsers';\nimport InfoUsers from './InfoUsers';\n\nimport auth, { db } from '../firebase/firebaseConfig';\n\nconst Users = () => {\n  const handleRegister = async (email, password, confirmPassword, rol) => {\n    if (password !== confirmPassword) {\n      Swal.fire({\n        title: 'Error!',\n        text: 'Contraseñas no coinciden',\n        icon: 'warning',\n        confirmButtonText: 'Aceptar'\n      });\n    } else {\n      try {\n        const infoUsuario = await createUserWithEmailAndPassword(\n          auth,\n          email,\n          password\n        ).then((usuarioFirebase) => usuarioFirebase);\n        const docuRef = doc(db, `users/${infoUsuario.user.uid}`);\n        setDoc(docuRef, { email, role: rol });\n        Swal.fire({\n          title: 'Registro Exitoso!',\n          text: 'Se ha registrado nuevo usuario',\n          icon: 'success',\n          confirmButtonText: 'Aceptar'\n        });\n      } catch (error) {\n        console.log(error);\n      }\n      if (!rol.includes('mesero', 'cocinero', 'administrador')) {\n        Swal.fire({\n          title: 'Error!',\n          text: 'Falta elegir el rol',\n          icon: 'warning',\n          confirmButtonText: 'Aceptar'\n        });\n      }\n    }\n  };\n  return (\n    <div className=\"users-container\">\n      <FormUsers handleRegister={handleRegister} />\n      <table className=\"usersData\">\n        <tr>\n          <th>NOMBRE</th>\n          <th>ROL</th>\n          <th>EMAIL</th>\n        </tr>\n        <InfoUsers />\n      </table>\n    </div>\n  );\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}